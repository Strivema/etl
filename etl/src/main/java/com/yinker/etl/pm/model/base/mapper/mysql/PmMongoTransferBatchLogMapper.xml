<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<!-- namespace命名规则: 表对应java类的名称 -->
<mapper namespace="PmMongoTransferBatchLog">
	<!-- 表的所有字段 -->
	<sql id="allColumns">
		<![CDATA[
			id,
			batch_id,
			start_time,
			end_time,
			bool_exception,
			remark,
			create_time,
			last_update_time,
			operator
	    ]]>
	</sql>

	<!-- 表的主键字段 -->
	<sql id="pkColumns">
		<![CDATA[
			id
	    ]]>
	</sql>

	<!-- 根据实体的查询对象进行查询的sql -->
	<sql id="querySql">
		select
		<include refid="allColumns" />
		from pm_mongo_transfer_batch_log
		<where>
			<if test="id != null and id != ''">
					<![CDATA[and id = #{id}]]>
			</if>
			<if test="batchId != null and batchId != ''">
					<![CDATA[and batch_id = #{batchId}]]>
			</if>
			<if test="boolException != null and boolException != ''">
					<![CDATA[and bool_exception = #{boolException}]]>
			</if>
			<if test="operator != null and operator != ''">
					<![CDATA[and operator = #{operator}]]>
			</if>
			<if test="remark != null and remark != ''">
					<![CDATA[and remark = #{remark}]]>
			</if>
			<if test="idDate != null and idDate != ''">
					<![CDATA[and batch_id like CONCAT(CONCAT('%', #{idDate}), '%')]]>
			</if>
			<if test="errCreateTimeStart != null">
						<![CDATA[and date_format(create_time,'%Y-%m-%d') >= date_format(#{errCreateTimeStart},'%Y-%m-%d')]]>
			</if>
			<if test="errCreateTimeEnd != null">
						<![CDATA[and date_format(create_time,'%Y-%m-%d') <= date_format(#{errCreateTimeEnd},'%Y-%m-%d')]]>
			</if>
		</where>
	</sql>

	<!-- 新增数据 -->
	<insert id="insert"
		parameterType="com.yinker.etl.pm.model.base.PmMongoTransferBatchLog">
	    <![CDATA[
			insert into pm_mongo_transfer_batch_log (
			   id,
			batch_id,
			start_time,
			end_time,
			bool_exception,
			remark,
			create_time,
			last_update_time,
			operator
			) values (
			    #{id},
				#{batchId},
				#{startTime},
				#{endTime},
				#{boolException},
				#{remark},
				#{createTime},
				#{lastUpdateTime},
				#{operator}
			)
		]]>
	</insert>

<!-- 根据主键删除数据 -->
	<delete id="deleteByPK" parameterType="com.yinker.etl.pm.model.base.PmMongoTransferBatchLogPK">
        <![CDATA[
			delete from pm_mongo_transfer_batch_log
				where
				id=#{id}
    	]]>
	</delete>
	
	<!-- 根据主键更新数据 -->
	<update id="updateByPK" parameterType="com.yinker.etl.pm.model.base.PmMongoTransferBatchLog">
		update pm_mongo_transfer_batch_log
			<set>
				<if test="batchId != null"><![CDATA[batch_id = #{batchId},]]></if>
				<if test="startTime != null"><![CDATA[start_time = #{startTime},]]></if>
				<if test="endTime != null"><![CDATA[end_time = #{endTime},]]></if>
				<if test="boolException != null"><![CDATA[bool_exception = #{boolException},]]></if>
				<if test="remark != null"><![CDATA[remark = #{remark},]]></if>
				<if test="createTime != null"><![CDATA[create_time = #{createTime},]]></if>
				<if test="operator != null"><![CDATA[remark = #{remark},]]></if>
				<if test="lastUpdateTime != null"><![CDATA[last_update_time = #{lastUpdateTime},]]></if>
			</set>
		where 
			id=#{id}
	</update>

	<!-- 根据主键查询对象 -->
	<select id="selectByPK"
		parameterType="com.yinker.etl.pm.model.base.PmMongoTransferBatchLogPK"
		resultMap="etl.PmMongoTransferBatchLogRM">
		select
		<include refid="allColumns" />
	    <![CDATA[
			from pm_mongo_transfer_batch_log
			where 
			id=#{id}
	    ]]>
	</select>

	<!-- 根据实体对象查询数据结果集 -->
	<select id="selectByEntity"
		parameterType="com.yinker.etl.pm.model.PmMongoTransferBatchLogQuery"
		resultMap="etl.PmMongoTransferBatchLogRM">
		<include refid="querySql" />
		<if test="sortColumns != null and sortColumns != ''">
			order by ${sortColumns}
		</if>
	</select>

	<!-- 分页查询 -查询结果数据 -->
	<select id="selectByPage"
		parameterType="com.yinker.etl.pm.model.PmMongoTransferBatchLogQuery"
		resultMap="etl.PmMongoTransferBatchLogRM">
		<include refid="querySql" />
		<if test="sortColumns != null and sortColumns != ''">
			order by ${sortColumns}
		</if>
	</select>

	<!-- 分页查询 -查询记录总数 -->
	<select id="selectByPageCount"
		parameterType="com.yinker.etl.pm.model.PmMongoTransferBatchLogQuery"
		resultType="integer">
		select count(id) from (
		<include refid="querySql" />
		) as tmp_pm_mongo_transfer_batch_log
	</select>
</mapper>